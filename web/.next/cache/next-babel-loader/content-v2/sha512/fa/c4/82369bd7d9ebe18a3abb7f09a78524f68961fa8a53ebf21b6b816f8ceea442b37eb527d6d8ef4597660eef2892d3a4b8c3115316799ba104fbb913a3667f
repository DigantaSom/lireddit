{"ast":null,"code":"export var toErrorMap = function toErrorMap(errors) {\n  var errorMap = {};\n  errors.forEach(function (_ref) {\n    var field = _ref.field,\n        message = _ref.message;\n    errorMap[field] = message;\n  });\n  return errorMap;\n};","map":{"version":3,"sources":["D:/Web Development/GraphQL/lireddit (apollo)/web/src/utils/toErrorMap.ts"],"names":["toErrorMap","errors","errorMap","forEach","field","message"],"mappings":"AAEA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,MAAD,EAA0B;AAClD,MAAMC,QAAgC,GAAG,EAAzC;AAEAD,EAAAA,MAAM,CAACE,OAAP,CAAe,gBAAwB;AAAA,QAArBC,KAAqB,QAArBA,KAAqB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACrCH,IAAAA,QAAQ,CAACE,KAAD,CAAR,GAAkBC,OAAlB;AACD,GAFD;AAIA,SAAOH,QAAP;AACD,CARM","sourcesContent":["import { FieldError } from '../generated/graphql';\r\n\r\nexport const toErrorMap = (errors: FieldError[]) => {\r\n  const errorMap: Record<string, string> = {};\r\n\r\n  errors.forEach(({ field, message }) => {\r\n    errorMap[field] = message;\r\n  });\r\n\r\n  return errorMap;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
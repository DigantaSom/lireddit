{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Web Development\\\\GraphQL\\\\lireddit (apollo)\\\\web\\\\src\\\\components\\\\Navbar.tsx\";\nimport NextLink from 'next/link';\nimport { Box, Flex, Heading, Link } from '@chakra-ui/layout';\nimport { useMeQuery } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\n\nconst Navbar = () => {\n  const {\n    data,\n    loading\n  } = useMeQuery({\n    skip: isServer()\n  });\n  let body = null;\n\n  if (loading) {} else if (!(data !== null && data !== void 0 && data.me)) {\n    var _data$me;\n\n    body = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: data === null || data === void 0 ? void 0 : (_data$me = data.me) === null || _data$me === void 0 ? void 0 : _data$me.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          mr: 2,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/register\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    bg: \"tan\",\n    p: 4,\n    alignItems: \"center\",\n    mb: 5,\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      maxW: 800,\n      mx: \"auto\",\n      alignItems: \"center\",\n      flex: 1,\n      children: [/*#__PURE__*/_jsxDEV(NextLink, {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"LiReddit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Flex, {\n        ml: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Navbar;","map":{"version":3,"sources":["D:/Web Development/GraphQL/lireddit (apollo)/web/src/components/Navbar.tsx"],"names":["NextLink","Box","Flex","Heading","Link","useMeQuery","isServer","Navbar","data","loading","skip","body","me","username"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,IAA7B,QAAyC,mBAAzC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBJ,UAAU,CAAC;AACnCK,IAAAA,IAAI,EAAEJ,QAAQ;AADqB,GAAD,CAApC;AAIA,MAAIK,IAAI,GAAG,IAAX;;AAEA,MAAIF,OAAJ,EAAa,CACZ,CADD,MACO,IAAI,EAACD,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEI,EAAP,CAAJ,EAAe;AAAA;;AACpBD,IAAAA,IAAI,gBACF;AAAA,8BACE,QAAC,GAAD;AAAA,kBAAMH,IAAN,aAAMA,IAAN,mCAAMA,IAAI,CAAEI,EAAZ,6CAAM,SAAUC;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAQD,GATM,MASA;AACL;AAAA;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,QAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAE,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,WAAf;AAAA,+BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAQD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,KAAT;AAAe,IAAA,CAAC,EAAE,CAAlB;AAAqB,IAAA,UAAU,EAAC,QAAhC;AAAyC,IAAA,EAAE,EAAE,CAA7C;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAE,GAAZ;AAAiB,MAAA,EAAE,EAAC,MAApB;AAA2B,MAAA,UAAU,EAAC,QAAtC;AAA+C,MAAA,IAAI,EAAE,CAArD;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI,EAAC,GAAf;AAAA,+BACE,QAAC,IAAD;AAAA,iCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxCD;;AA0CA,eAAeN,MAAf","sourcesContent":["import NextLink from 'next/link';\r\nimport { Box, Flex, Heading, Link } from '@chakra-ui/layout';\r\nimport { useMeQuery } from '../generated/graphql';\r\nimport { isServer } from '../utils/isServer';\r\n\r\nconst Navbar = () => {\r\n  const { data, loading } = useMeQuery({\r\n    skip: isServer(),\r\n  });\r\n\r\n  let body = null;\r\n\r\n  if (loading) {\r\n  } else if (!data?.me) {\r\n    body = (\r\n      <>\r\n        <Box>{data?.me?.username}</Box>\r\n        <NextLink href='/register'>\r\n          <Link>Register</Link>\r\n        </NextLink>\r\n      </>\r\n    );\r\n  } else {\r\n    <>\r\n      <NextLink href='/login'>\r\n        <Link mr={2}>Login</Link>\r\n      </NextLink>\r\n      <NextLink href='/register'>\r\n        <Link>Register</Link>\r\n      </NextLink>\r\n    </>;\r\n  }\r\n\r\n  return (\r\n    <Flex bg='tan' p={4} alignItems='center' mb={5}>\r\n      <Flex maxW={800} mx='auto' alignItems='center' flex={1}>\r\n        <NextLink href='/'>\r\n          <Link>\r\n            <Heading>LiReddit</Heading>\r\n          </Link>\r\n        </NextLink>\r\n        <Flex ml='auto'></Flex>\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"]},"metadata":{},"sourceType":"module"}
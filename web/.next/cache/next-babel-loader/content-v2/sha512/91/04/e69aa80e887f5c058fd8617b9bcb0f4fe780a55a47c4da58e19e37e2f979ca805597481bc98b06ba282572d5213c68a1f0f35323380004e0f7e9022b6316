{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Web Development\\\\GraphQL\\\\lireddit (apollo)\\\\web\\\\src\\\\pages\\\\register.tsx\";\nimport { Button } from '@chakra-ui/button';\nimport { Box } from '@chakra-ui/layout';\nimport { Form, Formik } from 'formik';\nimport InputField from '../components/InputField';\nimport Wrapper from '../components/Wrapper';\n\nconst Register = () => {\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    variant: \"small\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        username: '',\n        email: '',\n        password: ''\n      },\n      onSubmit: async (values, {\n        setErrors\n      }) => {},\n      children: ({\n        isSubmitting\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Username\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          colorScheme: \"teal\",\n          mt: 4,\n          isLoading: isSubmitting,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Register;","map":{"version":3,"sources":["D:/Web Development/GraphQL/lireddit (apollo)/web/src/pages/register.tsx"],"names":["Button","Box","Form","Formik","InputField","Wrapper","Register","username","email","password","values","setErrors","isSubmitting"],"mappings":";;AAAA,SAASA,MAAT,QAAuB,mBAAvB;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACE,QAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA,2BACE,QAAC,MAAD;AACE,MAAA,aAAa,EAAE;AAAEC,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE,EAAvB;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OADjB;AAEE,MAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,QAAAA;AAAF,OAAf,KAAiC,CAAE,CAF/C;AAAA,gBAGG,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBACC,QAAC,IAAD;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,UAAlB;AAA6B,YAAA,IAAI,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,OAAlB;AAA0B,YAAA,IAAI,EAAC,OAA/B;AAAuC,YAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,KAAK,EAAC,UAAlB;AAA6B,YAAA,IAAI,EAAC,UAAlC;AAA6C,YAAA,IAAI,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,WAAW,EAAC,MAAlC;AAAyC,UAAA,EAAE,EAAE,CAA7C;AAAgD,UAAA,SAAS,EAAEA,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzBD;;AA2BA,eAAeN,QAAf","sourcesContent":["import { Button } from '@chakra-ui/button';\r\nimport { Box } from '@chakra-ui/layout';\r\nimport { Form, Formik } from 'formik';\r\nimport { useRouter } from 'next/router';\r\nimport InputField from '../components/InputField';\r\nimport Wrapper from '../components/Wrapper';\r\nimport { toErrorMap } from '../utils/toErrorMap';\r\n\r\nconst Register = () => {\r\n  return (\r\n    <Wrapper variant='small'>\r\n      <Formik\r\n        initialValues={{ username: '', email: '', password: '' }}\r\n        onSubmit={async (values, { setErrors }) => {}}>\r\n        {({ isSubmitting }) => (\r\n          <Form>\r\n            <Box mt={4}>\r\n              <InputField label='Username' name='username' />\r\n            </Box>\r\n            <Box mt={4}>\r\n              <InputField label='Email' name='email' type='email' />\r\n            </Box>\r\n            <Box mt={4}>\r\n              <InputField label='Password' name='password' type='password' />\r\n            </Box>\r\n            <Button type='submit' colorScheme='teal' mt={4} isLoading={isSubmitting}>\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}